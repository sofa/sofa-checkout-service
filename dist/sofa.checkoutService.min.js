/**
 * sofa-checkout-service - v0.7.0 - 2014-12-18
 * http://www.sofa.io
 *
 * Copyright (c) 2014 CouchCommerce GmbH (http://www.couchcommerce.com / http://www.sofa.io) and other contributors
 * THIS SOFTWARE CONTAINS COMPONENTS OF THE SOFA.IO COUCHCOMMERCE SDK (WWW.SOFA.IO).
 * IT IS PROVIDED UNDER THE LICENSE TERMS OF THE ATTACHED LICENSE.TXT.
 */
!function(a){"use strict";a.define("sofa.CheckoutService",function(b,c,d,e,f,g,h){var i={},j=null,k=f.get("checkoutEndpoint"),l=new a.checkout.DefaultQuoteRequester(c),m=new a.checkout.FlowRouter;return i.getLastUsedPaymentMethod=function(){return null},i.getLastUsedShippingMethod=function(){return null},i.hasExistingBillingAddress=function(){return h.hasExistingBillingAddress()},i.getShippingAddress=function(){return h.getShippingAddress()},i.updateShippingAddress=function(a){h.updateShippingAddress(a)},i.getBillingAddress=function(){return h.getBillingAddress()},i.updateBillingAddress=function(a){h.updateBillingAddress(a)},i.getPaymentMethod=function(){return g.get(STORE_PAYMENT_METHOD_KEY)},i.updatePaymentMethod=function(a){g.set(STORE_PAYMENT_METHOD_KEY,a)},i.getShippingMethod=function(){return g.get(STORE_SHIPPING_METHOD_KEY)},i.updateShippingMethod=function(a){g.set(STORE_SHIPPING_METHOD_KEY,a)},i.getPaymentMethodByCode=function(b,c){return a.Util.find(c,function(a){return a.code&&a.code===b})||{}},i.getCleanCheckoutModel=function(){return{billingAddress:{},shippingAddress:{},payment:{},shipping:{}}},i.getAvailableCheckoutMethods=function(){return b({method:"POST",url:k+"/methods",data:requestModel}).then(function(b){return b.data.paymentMethods=a.utils.FormatUtils.toSofaPaymentMethods(b.data.paymentMethods),b.data.shippingMethods=a.utils.FormatUtils.toSofaShippingMethods(b.data.shippingMethods),b.data})},i.addFlow=function(a){m.addFlow(a)},i.addFlows=function(a){m.addFlows(a)},i.createQuote=function(a){var b=m.matchFlow(a);return b.checkout(a).then(function(a){return j=a,j.cached=!0,a})},i.getQuote=function(a){return l.getQuote(a,j)},i.createOrder=function(a){return orderRequester.getOrder(a)},i}),a.define("sofa.checkout.flows.DummyFlow",function(a){var b={};return b.initialize=function(){},b.checkout=function(){var b=a.defer();return b.resolve({token:"4711",quote:{id:4712}}),b.promise},b}),a.define("sofa.checkout.DefaultOrderRequester",function(a){var b=this;return b.getOrder=function(){var b=a.defer();return b.resolve({token:"4711",order:{id:4712}}),b.promise},b}),a.define("sofa.checkout.DefaultQuoteRequester",function(a){var b=this;return b.getQuote=function(b,c){if(c&&c.token==b.token&&c.quote.id==b.id)return a.when(c);var d=a.defer();return d.resolve({token:"4711",quote:{id:4712}}),d.promise},b}),a.define("sofa.checkout.FlowRouter",function(){var b={},c=[];return b.addFlow=function(a){c.push(a)},b.addFlows=function(a){a=a},b.matchFlow=function(b){var d=a.Util.find(c,function(a){return a.predicate(b)});return d.flow},b}),a.define("sofa.utils.FormatUtils",{zeroFill:function(a,b){return b-=a.toString().length,b>0?new Array(b+(/\./.test(a)?2:1)).join("0")+a:a+""}})}(sofa);